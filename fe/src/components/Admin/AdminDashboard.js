"use client"

import { useState, useEffect } from "react"
import { adminAPI, dashboardAPI } from "../../services/api"
import { useAuth } from "../../contexts/AuthContext"
import { toast } from "react-toastify"
import UserManagement from "./UserManagement"
import SystemStats from "./SystemStats"
import "./AdminDashboard.css"

const AdminDashboard = () => {
  const [activeTab, setActiveTab] = useState("overview")
  const [systemStats, setSystemStats] = useState(null)
  const [userStats, setUserStats] = useState(null)
  const [loading, setLoading] = useState(true)
  const { user } = useAuth()

  useEffect(() => {
    if (user?.role === "ADMIN") {
      fetchAdminData()
    }
  }, [user])

  const fetchAdminData = async () => {
    try {
      const [systemRes, userRes, dashboardRes] = await Promise.all([
        adminAPI.getSystemStats(),
        adminAPI.getUserStats(),
        dashboardAPI.getStats(),
      ])
      setSystemStats({ ...systemRes.data, ...dashboardRes.data })
      setUserStats(userRes.data)
    } catch (error) {
      toast.error("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu admin")
      console.error("Fetch admin data error:", error)
    } finally {
      setLoading(false)
    }
  }

  if (user?.role !== "ADMIN") {
    return (
      <div className="access-denied">
        <h2>Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h2>
        <p>B·∫°n c·∫ßn quy·ªÅn Admin ƒë·ªÉ truy c·∫≠p trang n√†y.</p>
      </div>
    )
  }

  if (loading) {
    return (
      <div className="loading">
        <div className="spinner"></div>
      </div>
    )
  }

  return (
    <div className="admin-dashboard">
      <div className="page-header">
        <h1 className="page-title">Qu·∫£n tr·ªã h·ªá th·ªëng</h1>
      </div>

      <div className="admin-tabs">
        <button
          className={`tab-btn ${activeTab === "overview" ? "active" : ""}`}
          onClick={() => setActiveTab("overview")}
        >
          üìä T·ªïng quan
        </button>
        <button className={`tab-btn ${activeTab === "users" ? "active" : ""}`} onClick={() => setActiveTab("users")}>
          üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng
        </button>
        <button className={`tab-btn ${activeTab === "system" ? "active" : ""}`} onClick={() => setActiveTab("system")}>
          ‚öôÔ∏è H·ªá th·ªëng
        </button>
      </div>

      <div className="tab-content">
        {activeTab === "overview" && (
          <div className="overview-tab">
            <div className="stats-grid">
              <div className="stat-card">
                <div className="stat-icon">üë•</div>
                <div className="stat-content">
                  <div className="stat-number">{systemStats?.totalUsers || 0}</div>
                  <div className="stat-label">T·ªïng ng∆∞·ªùi d√πng</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üè•</div>
                <div className="stat-content">
                  <div className="stat-number">{systemStats?.totalPatients || 0}</div>
                  <div className="stat-label">T·ªïng b·ªánh nh√¢n</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üë®‚Äç‚öïÔ∏è</div>
                <div className="stat-content">
                  <div className="stat-number">{systemStats?.totalDoctors || 0}</div>
                  <div className="stat-label">T·ªïng b√°c sƒ©</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üìÖ</div>
                <div className="stat-content">
                  <div className="stat-number">{systemStats?.totalAppointments || 0}</div>
                  <div className="stat-label">T·ªïng l·ªãch h·∫πn</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üíä</div>
                <div className="stat-content">
                  <div className="stat-number">{systemStats?.totalPrescriptions || 0}</div>
                  <div className="stat-label">T·ªïng ƒë∆°n thu·ªëc</div>
                </div>
              </div>
              <div className="stat-card">
                <div className="stat-icon">üß™</div>
                <div className="stat-content">
                  <div className="stat-number">{systemStats?.totalLabResults || 0}</div>
                  <div className="stat-label">T·ªïng x√©t nghi·ªám</div>
                </div>
              </div>
            </div>

            <div className="activity-section">
              <h3>Ho·∫°t ƒë·ªông h·ªá th·ªëng</h3>
              <div className="activity-cards">
                <div className="activity-card">
                  <h4>Ng∆∞·ªùi d√πng ho·∫°t ƒë·ªông</h4>
                  <div className="activity-number">{userStats?.activeUsers || 0}</div>
                  <div className="activity-period">Trong 24h qua</div>
                </div>
                <div className="activity-card">
                  <h4>L·ªãch h·∫πn h√¥m nay</h4>
                  <div className="activity-number">{systemStats?.todayAppointments || 0}</div>
                  <div className="activity-period">H√¥m nay</div>
                </div>
                <div className="activity-card">
                  <h4>ƒê∆°n thu·ªëc m·ªõi</h4>
                  <div className="activity-number">{systemStats?.newPrescriptions || 0}</div>
                  <div className="activity-period">Tu·∫ßn n√†y</div>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === "users" && <UserManagement />}

        {activeTab === "system" && <SystemStats systemStats={systemStats} />}
      </div>
    </div>
  )
}

export default AdminDashboard
